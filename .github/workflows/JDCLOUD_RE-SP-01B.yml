name: JDCLOUD_RE-SP-01B

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Checkout
        uses: actions/checkout@master


      - name: 初始化编译环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt update -yqq
          #sudo apt full-upgrade -yqq
          sudo apt install -yqq ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev

      - name: 下载 LEDE 源码
        run: |
          #获取最新源代码
          git clone https://github.com/coolsnowwolf/lede.git
          mv ./lede/* ./

          #❤获取分支源代码
          #git clone -b lede-17.01 https://github.com/coolsnowwolf/openwrt.git
          #mv ./openwrt/* ./

          #获取发行源代码
          #wget "https://github.com/coolsnowwolf/lede/archive/refs/tags/20221001.zip"
          #unzip -qq 20221001.zip
          #mv ./lede-20221001/* ./

      - name: 安装第三方插件
        run: |
          cd package/lean
          rm -rf luci-theme-argon
          git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git
      - name: 更新 FEEDS
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 定制编译配置文件
        run: |
          #修改默认主题
          sed -i 's/luci-theme-bootstrap/luci-theme-argon/g' feeds/luci/collections/luci/Makefile
          #修改默认网关
          sed -i 's/192.168.1.1/192.168.1.8/g' package/base-files/files/bin/config_generate
          #默认开启wifi
          sed -i 's/set wireless.radio${devidx}.disabled=1/set wireless.radio${devidx}.disabled=0/g' package/kernel/mac80211/files/lib/wifi/mac80211.sh

          rm -f ./.config*
          touch ./.config

          cat >> .config <<EOF
          #设备型号
          CONFIG_TARGET_ramips=y
          CONFIG_TARGET_ramips_mt7621=y
          CONFIG_TARGET_ramips_mt7621_DEVICE_jdcloud_re-sp-01b=y

          #WIFI驱动
          #5G
          CONFIG_PACKAGE_kmod-mt7615-common=y
          CONFIG_PACKAGE_kmod-mt7615-firmware=y
          CONFIG_PACKAGE_kmod-mt7615d=y
          CONFIG_PACKAGE_kmod-mt7615d_dbdc=y
          CONFIG_PACKAGE_kmod-mt7615e=y

          #2.4G
          CONFIG_PACKAGE_kmod-mt7603=y
          CONFIG_PACKAGE_kmod-mt7603e=y

          #IPv6
          CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          CONFIG_PACKAGE_ipv6helper=y

          #硬盘支持
          CONFIG_PACKAGE_kmod-ata-core=y
          CONFIG_PACKAGE_kmod-block2mtd=y
          CONFIG_PACKAGE_kmod-scsi-core=y
          CONFIG_PACKAGE_kmod-scsi-generic=y

          #USB硬盘
          CONFIG_PACKAGE_kmod-usb-storage=y
          CONFIG_PACKAGE_kmod-usb-storage-extras=y
          CONFIG_PACKAGE_kmod-usb-storage-uas=y

          CONFIG_PACKAGE_kmod-usb-core=y
          #USB1.1
          #CONFIG_PACKAGE_kmod-usb-uhci=y
          #CONFIG_PACKAGE_kmod-usb-ohci=y
          #USB2.0
          CONFIG_PACKAGE_kmod-usb2=y
          CONFIG_PACKAGE_kmod-usb-ehci=y
          #USB3.0
          CONFIG_PACKAGE_kmod-usb3=y
          CONFIG_PACKAGE_kmod-usb-xhci-hcd=y
          CONFIG_PACKAGE_kmod-usb-xhci-mtk=y

          #硬盘自动休眠
          CONFIG_PACKAGE_kmod-usb-hid=y

          #文件系统
          CONFIG_PACKAGE_kmod-fs-cifs=y
          CONFIG_PACKAGE_kmod-fs-exfat=y
          CONFIG_PACKAGE_kmod-fs-ext4=y
          CONFIG_PACKAGE_kmod-fs-vfat=y
          CONFIG_PACKAGE_kmod-fs-btrfs=y
          CONFIG_PACKAGE_kmod-fs-squashfs=y

          #用于自动挂载NTFS
          CONFIG_PACKAGE_kmod-fs-antfs=y

          #必备工具集
          CONFIG_PACKAGE_block-mount=y
          CONFIG_PACKAGE_blockd=y
          CONFIG_PACKAGE_automount=y
          CONFIG_PACKAGE_autosamba=y
          CONFIG_PACKAGE_ntfs3-mount=y

          CONFIG_PACKAGE_htop=y
          CONFIG_PACKAGE_fdisk=y
          CONFIG_PACKAGE_lsblk=y
          CONFIG_PACKAGE_blkid=y
          CONFIG_PACKAGE_resize2fs=y
          CONFIG_PACKAGE_e2fsprogs=y
          CONFIG_PACKAGE_kmod-fs-btrfs=y
          CONFIG_PACKAGE_btrfs-progs=y

          CONFIG_PACKAGE_vim=y
          CONFIG_PACKAGE_wget-ssl=y
          CONFIG_PACKAGE_curl=y

          #语言支持(中文字符集)
          CONFIG_PACKAGE_kmod-nls-cp936=y
          CONFIG_PACKAGE_kmod-nls-utf8=y
          CONFIG_PACKAGE_luci-i18n-base-zh-cn=y

          #常用应用
          CONFIG_PACKAGE_luci-app-ddns=y
          CONFIG_PACKAGE_luci-app-hd-idle=y

          #多拨相关
          #CONFIG_PACKAGE_luci-app-mwan3=y
          #CONFIG_PACKAGE_luci-app-mwan3helper=y
          #CONFIG_PACKAGE_luci-app-syncdial=y

          #CONFIG_PACKAGE_luci-app-qos=y
          #CONFIG_PACKAGE_luci-app-squid=y
          CONFIG_PACKAGE_luci-app-turboacc=y
          CONFIG_PACKAGE_luci-app-upnp=y

          CONFIG_PACKAGE_luci-app-ttyd=y
          CONFIG_PACKAGE_luci-app-uhttpd=y
          CONFIG_PACKAGE_luci-app-vlmcsd=y
          CONFIG_PACKAGE_luci-app-wrtbwmon=y
          CONFIG_PACKAGE_luci-app-zerotier=y

          #上网时间控制
          CONFIG_PACKAGE_luci-app-accesscontrol=y
          CONFIG_PACKAGE_luci-app-argon-config=y
          CONFIG_PACKAGE_luci-app-autoreboot=y

          CONFIG_PACKAGE_luci-app-turboacc=y
          CONFIG_PACKAGE_luci-app-turboacc_INCLUDE_OFFLOADING=y
          CONFIG_PACKAGE_luci-app-turboacc_INCLUDE_BBR_CCA=y
          CONFIG_PACKAGE_luci-app-turboacc_INCLUDE_PDNSD=y
          #CONFIG_PACKAGE_luci-app-turboacc_INCLUDE_DNSFORWARDER=y
          #CONFIG_PACKAGE_luci-app-turboacc_INCLUDE_DNSPROXY=y

          #第三方应用
          #CONFIG_PACKAGE_luci-app-aliddns=y
          #CONFIG_PACKAGE_luci-theme-argon=y

          EOF

          sed -i 's/^[ \t]*//g' ./.config

      - name: 下载依赖包源代码
        run: |
          make defconfig
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: 正式开始编译固件
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s

      - name: 打包上传编译好的 Bin
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt-Jd-bin.zip
          path: bin/targets/

      - name: 用户空间清理准备上传大文件
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /usr/local/lib/android
          sudo apt -yqq purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo apt -yqq purge ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential ccache cmake cpio device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib  gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim xmlto xxd zlib1g-dev
          sudo apt -y autoremove --purge
          sudo apt clean

      - name: 打包上传编译环境 build
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt-Jd.zip
          path: ./

      - name: 打包并上传到阿里云盘
        run: |
          wget "https://github.com/tickstep/aliyunpan/releases/download/v0.2.6/aliyunpan-v0.2.6-linux-amd64.zip"
          unzip -d ~/ aliyunpan-v0.2.6-linux-amd64
          ~/aliyunpan-v0.2.6-linux-amd64/aliyunpan login -RefreshToken=${{ secrets.ALIYUN_TOKEN }}

          sleep 10
          zip -q -r ~/OpenWrt-Jd-bin.zip bin/targets
          ~/aliyunpan-v0.2.6-linux-amd64/aliyunpan u ~/OpenWrt-Jd-bin.zip /OpenWrt

          zip -q -r ~/OpenWrt-Jd.zip ./
          sleep 10
          ~/aliyunpan-v0.2.6-linux-amd64/aliyunpan u ~/OpenWrt-Jd.zip /OpenWrt

      - name: 清理旧的workflow
        uses: GitRML/delete-workflow-runs@main
        with:
           retain_days: 180
           keep_minimum_runs: 10